using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.Logging;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Farmerce.Models;
using System.Net;
using System.Net.Mail;
using Farmerce.Data;
using Microsoft.AspNetCore.Authorization;

namespace Farmerce.Controllers
{
    public class OrderFormController : Controller
    {
        private readonly ApplicationDbContext _context;
        public OrderFormController(ApplicationDbContext context)
        {
            _context = context;
        }

        [Authorize]
        public IActionResult Index()
        {
            var list = _context.OrderForm.ToList();
            return View(list);
        }
        public IActionResult Add()
        {
            return View();
        }
        public IActionResult OrderForm()
        {
            return View();
        }
        [HttpPost]
        public IActionResult OrderForm(OrderForm record, int? id)
        {
            var item = _context.Products.Where(p => p.ProductID == id).SingleOrDefault();
            int i = 1;
            var order = new OrderForm();
            order.itemBuy = item.ProductName;
            order.quantity = record.quantity;
            order.fullName = record.fullName;
            order.emailAddress = record.emailAddress;
            order.phoneNumber = record.phoneNumber;
            order.Type = (processed)i;
            _context.OrderForm.Add(order);
            _context.SaveChanges();
            MailMessage mail = new MailMessage()
            {
                From = new MailAddress("mvcapplicationtestrun@gmail.com", "AutoGeneratedText(DoNotReply)")
            };
            mail.To.Add(new MailAddress(record.emailAddress));

            mail.Subject = " (" + "Item purchased" + ")";
            string message = "Hello," + record.fullName + "<br/><br/>"
                + "Thank you for purchasing. <br/><br/>Here are the items that you have purchased <br/><br/>"
                + "Items: " + item.ProductName + "<br/><br/>" + "Quantity:" + record.quantity + "<br/><br/>" + "Item is being processed Thank you.";
            mail.Body = message;
            mail.IsBodyHtml = true;

            using SmtpClient smtp = new SmtpClient("smtp.gmail.com", 587)
            {
                Credentials = new NetworkCredential("mvcapplicationtestrun@gmail.com", "4D302EB5AC0A121C4F570594EE0E43001B959AAD5F273CE16AF694A1A05B2B56"),
                EnableSsl = true
            };
            smtp.Send(mail);
            ViewBag.Message = "Submitted.";
            return View();
        }
        public IActionResult Edit(int? id)
        {
            if (id == null)
            {
                return RedirectToAction("Index");
            }

            var Order = _context.OrderForm.Where(i => i.Id == id).SingleOrDefault();
            if (Order == null)
            {
                return RedirectToAction("Index");
            }
            return View(Order);
        }
        [HttpPost]
        public IActionResult Edit(int? id, OrderForm record)
        {
            var order = _context.OrderForm.Where(i => i.Id == id).SingleOrDefault();
            order.itemBuy = record.itemBuy;
            order.quantity = record.quantity;
            order.fullName = record.fullName;
            order.emailAddress = record.emailAddress;
            order.phoneNumber = record.phoneNumber;
            order.Type = record.Type;

            _context.OrderForm.Update(order);
            _context.SaveChanges();

            return RedirectToAction("Index");
        }
        public IActionResult Delete(int? id)
        {
            if (id == null)
            {
                return RedirectToAction("Index");
            }
            var order = _context.OrderForm.Where(i => i.Id == id).SingleOrDefault();
            if (order == null)
            {
                return RedirectToAction("Index");
            }

            _context.OrderForm.Remove(order);
            _context.SaveChanges();

            return RedirectToAction("Index");
        }
    }
}
